# Generated by Django 5.0.4 on 2024-05-03 18:18

import ckeditor_uploader.fields
import django.db.models.deletion
import django.utils.timezone
import frontend.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('frontend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/blog')),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('contact_number', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PackageCatgory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_category_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/projects')),
                ('package_name', models.CharField(blank=True, max_length=255, null=True)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Q_FormType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/service')),
                ('service_category_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='product',
            name='brand_name',
        ),
        migrations.RemoveField(
            model_name='product',
            name='category_name',
        ),
        migrations.RemoveField(
            model_name='product',
            name='image',
        ),
        migrations.RemoveField(
            model_name='product',
            name='product_brochure',
        ),
        migrations.AddField(
            model_name='category',
            name='images',
            field=models.ImageField(blank=True, null=True, upload_to='media/category'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='frontend.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='frontend.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_at',
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='product',
            name='short_description',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='show_product',
            field=models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=3),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_overview',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_specifcation',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Brochure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='media/brochures', validators=[frontend.models.validate_pdf])),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='brochure', to='frontend.product')),
            ],
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/packages')),
                ('package_name', models.CharField(blank=True, max_length=255, null=True)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='frontend.packagecatgory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/product')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='frontend.product')),
            ],
        ),
        migrations.CreateModel(
            name='Q_EVData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installation_type', models.CharField(blank=True, choices=[('Home', 'House'), ('Business Premises', 'Business Premises')], max_length=255, null=True)),
                ('ownership_type', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], max_length=255, null=True)),
                ('parking_type', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], max_length=255, null=True)),
                ('car_type', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO'), ('It will be delivered shortly', 'It will be delivered shortly')], max_length=255, null=True)),
                ('charger_type', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], max_length=255, null=True)),
                ('full_address', models.CharField(blank=True, max_length=255, null=True)),
                ('post_code', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('formType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='frontend.q_formtype')),
            ],
        ),
        migrations.CreateModel(
            name='Q_BoilerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(blank=True, choices=[('House', 'House'), ('Apartment', 'Apartment'), ('Office', 'Office'), ('Others', 'Others')], max_length=255, null=True)),
                ('job_type', models.CharField(blank=True, choices=[('New Instalation', 'New Instalation'), ('Replacement', 'Replacement'), ('Service', 'Service'), ('Others', 'Others')], max_length=255, null=True)),
                ('boiler_type', models.CharField(blank=True, choices=[('Central Heating & Hot Water', 'Central Heating & Hot Water'), ('Central Heating Only', 'Central Heating Only'), ('Hot Water Only', 'Hot Water Only'), ('Do not Know', 'Do not Know')], max_length=255, null=True)),
                ('power_usage', models.CharField(blank=True, choices=[('Gas', 'Gas'), ('Oil', 'Oil'), ('LPG', 'LPG'), ('Others', 'Others')], max_length=255, null=True)),
                ('full_address', models.CharField(blank=True, max_length=255, null=True)),
                ('post_code', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('formType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='frontend.q_formtype')),
            ],
        ),
        migrations.CreateModel(
            name='Q_HeatPumps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heating_type', models.CharField(blank=True, choices=[('Gas/Oil Bioler', 'Gas/Oil Bioler'), ('Electric Boiler', 'Electric Boiler'), ('Others', 'Others')], max_length=255, null=True)),
                ('loaction_type', models.CharField(blank=True, choices=[('HOME', 'HOME'), ('BUSINESS', 'BUSINESS')], max_length=255, null=True)),
                ('owenership_type', models.CharField(blank=True, choices=[('Homeowner', 'Homeowner'), ('Tenent', 'Tenent')], max_length=255, null=True)),
                ('heat_pump_type', models.CharField(blank=True, choices=[('Air Source', 'Air Source'), ('Water Source', 'Water Source'), ('Ground Source', 'Ground Source'), ('Not Sure- Need advise', 'Not Sure- Need advise')], max_length=255, null=True)),
                ('duration', models.CharField(blank=True, choices=[('As Soon As Possible', 'As Soon As Possible'), ('1-3 months', '1-3 months'), ('3-6 months', '3-6 months'), ('6+ Months', '6+ Months')], max_length=255, null=True)),
                ('property_type', models.CharField(blank=True, choices=[('Semi Detached', 'Semi Detached'), ('Detached', 'Detached'), ('Apartment', 'Apartment'), ('Bungalow', 'Bungalow'), ('Terraced', 'Terraced'), ('Other', 'Other')], max_length=255, null=True)),
                ('insulation', models.CharField(blank=True, choices=[('Loft Insulation', 'Loft Insulation'), ('Cavity Insulation', 'Cavity Insulation'), ('Double Window Glazing', 'Double Window Glazing'), ('Triple window Glazing', 'Triple window Glazing'), ('None of the above', 'None of the above')], max_length=255, null=True)),
                ('radiators', models.CharField(blank=True, choices=[('1-5 Radiators', '1-5 Radiators'), ('6-10 Radiators', '6-10 Radiators'), ('11-15 Radiators', '11-15 Radiators'), ('16+ Radiators', '16+ Radiators')], max_length=255, null=True)),
                ('avilable_space', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO'), ('Not Sure', 'Not Sure')], max_length=255, null=True)),
                ('power_type', models.CharField(blank=True, choices=[('Gas', 'Gas'), ('Oil', 'Oil'), ('LPG', 'LPG'), ('Electric', 'Electric'), ('Others', 'Others')], max_length=255, null=True)),
                ('full_address', models.CharField(blank=True, max_length=255, null=True)),
                ('post_code', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('formType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='frontend.q_formtype')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/service')),
                ('service_name', models.CharField(blank=True, max_length=255, null=True)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='frontend.servicecategory')),
            ],
        ),
    ]
